diff --git a/samples/snippets/pom.xml b/samples/snippets/pom.xml
index f5d1351a..9ede6f23 100644
--- a/samples/snippets/pom.xml
+++ b/samples/snippets/pom.xml
@@ -47,6 +47,11 @@
       <version>6.19.1-SNAPSHOT</version>
     </dependency>
     <!-- [END spanner_install_with_bom] -->
+    <dependency>
+      <groupId>com.google.api.grpc</groupId>
+      <artifactId>proto-google-cloud-spanner-admin-database-v1</artifactId>
+      <version>6.19.1-SNAPSHOT</version>
+    </dependency>
 
     <dependency>
       <groupId>io.opencensus</groupId>
diff --git a/samples/snippets/src/main/java/com/example/spanner/SpannerSample.java b/samples/snippets/src/main/java/com/example/spanner/SpannerSample.java
index 2a4db98c..c44a012d 100644
--- a/samples/snippets/src/main/java/com/example/spanner/SpannerSample.java
+++ b/samples/snippets/src/main/java/com/example/spanner/SpannerSample.java
@@ -1625,9 +1625,9 @@ public class SpannerSample {
     Timestamp expireTime = Timestamp.ofTimeMicroseconds(TimeUnit.MICROSECONDS.convert(
             System.currentTimeMillis() + TimeUnit.DAYS.toMillis(14), TimeUnit.MILLISECONDS));
 
-    // Initiate the request which returns an OperationFuture.
+    // Initiate the requefst which returns an OperationFuture.
     System.out.println("Copying backup [" + backup.getId() + "]...");
-    OperationFuture<Backup, CopyBackupMetadata> op = backup.copyBackup();
+    OperationFuture<Backup, CopyBackupMetadata> op = dbAdminClient.copyBackup(backup);
     try {
       // Wait for the backup operation to complete.
       backup = op.get();
@@ -1886,7 +1886,8 @@ public class SpannerSample {
             TimeUnit.SECONDS.toMicros(backup.getExpireTime().getSeconds())
                 + TimeUnit.NANOSECONDS.toMicros(backup.getExpireTime().getNanos())
                 + TimeUnit.DAYS.toMicros(30L));
-    Timestamp newExpireTime = Math.min(expireTime, backup.getExpireTime());
+    int timeDiff = expireTime.compareTo(backup.getExpireTime());
+    Timestamp newExpireTime = (timeDiff < 0) ? expireTime : backup.getExpireTime();
 
     System.out.println(String.format(
         "Updating expire time of backup [%s] to %s...",
